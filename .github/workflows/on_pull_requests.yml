name: Validate PullRequest

on: pull_request

jobs:
  # Style:
  #   runs-on: ubuntu-22.04
  #   env:
  #     UV_PYTHON: "3.10"
  #     VIRTUAL_ENV: ".venv"
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: astral-sh/setup-uv@v3
  #     - run: make install
  #     - run: make style
  Tests:
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-11 ]
        python-version: [ "3.8", "3.9", "3.10", "3.11", "3.12" ]
    runs-on: ${{ matrix.os }}
    env:
      UV_PYTHON: ${{ matrix.python-version }}
      VIRTUAL_ENV: ".venv"
    steps:
      - uses: actions/checkout@v2
      - uses: astral-sh/setup-uv@v3
      - run: make install
      - name: Functional Tests
        run: make test-functional
      - name: Unit Tests
        run: make test-unit
  # SonarCloud:
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - uses: actions/checkout@v2
  #     - run: git submodule update --init
  #     - name: Unshallow
  #       run: git fetch --unshallow
  #     - name: SonarCloud Scan
  #       uses: sonarsource/sonarcloud-github-action@master
  #       continue-on-error: true
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  # PublishWheels:
  #   name: Build and publish wheels on ${{ matrix.os }}
  #   runs-on: ${{ matrix.os }}
  #   needs:
  #     - Tests
  #     - Style
  #     - SonarCloud
  #   strategy:
  #     matrix:
  #       os: [ ubuntu-latest, macos-11 ]
  #   steps:
  #     - uses: actions/checkout@v2
  #     - run: git submodule update --init
  #     - run: make set-dev-version
  #     - name: Build wheels
  #       uses: pypa/cibuildwheel@v2.1.2
  #       env:
  #         CIBW_ARCHS: native
  #     - uses: actions/setup-python@v2
  #       with:
  #         python-version: "3.9"
  #     - run: pip install twine==3.4.*
  #     - name: Publish wheels to test pypi
  #       env:
  #         TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
  #         TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
  #         TWINE_REPOSITORY_URL: https://test.pypi.org/legacy/
  #       run: twine upload wheelhouse/*
  # PublishSdist:
  #   name: Build and publish sdist
  #   runs-on: ubuntu-20.04
  #   needs:
  #     - Tests
  #     - Style
  #     - SonarCloud
  #   steps:
  #     - uses: actions/checkout@v2
  #     - run: git submodule update --init
  #     - run: make set-dev-version
  #     - uses: actions/setup-python@v2
  #       with:
  #         python-version: "3.9"
  #     - run: python setup.py sdist
  #     - run: pip install twine==3.4.*
  #     - name: Publish package to test pypi
  #       env:
  #         TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
  #         TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
  #         TWINE_REPOSITORY_URL: https://test.pypi.org/legacy/
  #       run: twine upload dist/*
